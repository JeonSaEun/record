* 필드
	-객체의 고유 데이터
	-객체가 가져야 할 부품 객체
	-객체의 현재 상태 데이터

* this.xxx
	-객체 그 자신
	-생성된 객체의 주소(reference)를 갖고있는 특수한 키워드

* 생성자 오버로딩
	-이름이 같은 생성자를 2개이상 선언
	-매개변수의 타입,개수,순서가 하나라도 달라야 컴파일 오류 안남
	-단점 ; 중복코드의 발생
	-this(타입,null or 0); 첫라인에 넣어줘야함

@NoArgsConstructor : 파라미터가 없는 생성자를 만들어라
@AllArgsConstructor : 모든 필드를 파라미터로 가지는 생성자를 만든다.
					=> 필드값을 모두 포함한 생성자를 자동 생성
@RequiredArgsConstructor : @NonNull이나 @final이 붙은 필드에 대해 생성자를 생성

* 메소드
	-객체의 동작(기능)
	-호출해서 실행하는 중괄호 블록 {}
	· 메소드 선언
		: 리턴타입 메소드이름 ([파라미터 선언, ...]) {

		}
	-메소드는 리턴값이 있을수도, 없을수도 있음

* Parameter(매개변수) : 호출자와 메소드를 연결시켜주는
* Argument(전달인자) : 매개변수에 실제 넣어주는 값

* return 문
	-return을 만나면 무조건 메소드 실행 종료
	-값을 호출자에게 돌려줌

***** ORACLE *****

* 테이블 스키마 : 테이블의 구조

* NULL : 결측치 (Missing Value)

* NVL(컬럼명,0) : NULL값 변환

* SQL에서 문자열 리터럴 생성 시 홀따옴표 ' ' 사용

* "" - 대부분 alias에서만 사용

* WHERE절에서 문자, 날짜 데이터는 ''으로 감싸서 사용(날짜는 'RR/MM/DD' 형식)